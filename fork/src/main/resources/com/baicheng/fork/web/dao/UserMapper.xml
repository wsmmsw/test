<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.baicheng.fork.web.dao.UserMapper">

    <resultMap id="BaseResultMap" type="User">
        <id column="id" property="id" jdbcType="BIGINT"/>
        <result column="username" property="username" jdbcType="VARCHAR"/>
        <result column="pwd" property="pwd" jdbcType="CHAR"/>
        <result column="state" property="state" jdbcType="VARCHAR"/>
        <result column="create_time" property="createTime" jdbcType="TIMESTAMP"/>
        <result column="truename" property="truename" jdbcType="VARCHAR"/>
        <result column="ldate" property="ldate" jdbcType="TIMESTAMP"/>
        <result column="lman" property="lman" jdbcType="BIGINT"/>
        <result column="cman" property="cman" jdbcType="BIGINT"/>
        <result column="portrait" property="portrait" jdbcType="VARCHAR"/>
    </resultMap>

    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" suffix=")" prefixOverrides="and">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value}
                                    and
                                    #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem"
                                             open="(" close=")" separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>

    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria"
                     separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" suffix=")" prefixOverrides="and">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value}
                                    and
                                    #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem"
                                             open="(" close=")" separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>

    <sql id="Base_Column_List">
        id, username, pwd, state,
        create_time,truename,ldate,lman,cman,portrait
    </sql>

    <select id="selectById" resultMap="BaseResultMap" parameterType="long">
        SELECT
        <include refid="Base_Column_List"></include>
        FROM user
        WHERE
        id = #{id}
    </select>

    <select id="selectByExample" resultMap="BaseResultMap"
            parameterType="UserExample">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        from user
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>

    <select id="selectByPrimaryKey" resultMap="BaseResultMap"
            parameterType="java.lang.Long">
        select
        <include refid="Base_Column_List"/>
        from user
        where id = #{id,jdbcType=BIGINT}
    </select>

    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
        delete from user
        where id = #{id,jdbcType=BIGINT}
    </delete>

    <delete id="deleteByExample" parameterType="UserExample">
        delete from user
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </delete>

    <insert id="insert" parameterType="User">
        <selectKey resultType="java.lang.Long" order="AFTER"
                   keyProperty="id">
            SELECT LAST_INSERT_ID() AS ID
        </selectKey>
        insert into user (id,
        username, pwd,
        state, create_time,truename,cman,portrait)
        values
        (#{id,jdbcType=BIGINT}, #{username,jdbcType=VARCHAR},
        #{pwd,jdbcType=CHAR},
        #{state,jdbcType=VARCHAR},
        #{createTime,jdbcType=TIMESTAMP},#{truename,jdbcType=VARCHAR},#{cman,jdbcType=BIGINT},#{portrait,jdbcType=VARCHAR})
    </insert>

    <insert id="insertSelective" parameterType="User">
        <selectKey resultType="java.lang.Long" order="AFTER"
                   keyProperty="id">
            SELECT LAST_INSERT_ID() AS ID
        </selectKey>
        insert into user
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="username != null">
                username,
            </if>
            <if test="pwd != null">
                pwd,
            </if>
            <if test="state != null">
                state,
            </if>
            <if test="createTime != null">
                create_time,
            </if>
            <if test="truename != null">
                truename,
            </if>
            <if test="cman != null">
                cman,
            </if>
            <if test="portrait != null">
                portrait
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=BIGINT},
            </if>
            <if test="username != null">
                #{username,jdbcType=VARCHAR},
            </if>
            <if test="pwd != null">
                #{pwd,jdbcType=CHAR},
            </if>
            <if test="state != null">
                #{state,jdbcType=VARCHAR},
            </if>
            <if test="createTime != null">
                #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="truename != null">
                #{truename,jdbcType=VARCHAR},
            </if>
            <if test="cman != null">
                #{cman,jdbcType=BIGINT},
            </if>
            <if test="portrait != null">
                #{portrait,jdbcType=VARCHAR}
            </if>
        </trim>
    </insert>

    <select id="countByExample" parameterType="UserExample"
            resultType="java.lang.Integer">
        select count(*) from user
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>

    <update id="updateByExampleSelective" parameterType="map">
        update user
        <set>
            <if test="record.id != null">
                id = #{record.id,jdbcType=BIGINT},
            </if>
            <if test="record.username != null">
                username = #{record.username,jdbcType=VARCHAR},
            </if>
            <if test="record.pwd != null">
                pwd = #{record.pwd,jdbcType=CHAR},
            </if>
            <if test="record.state != null">
                state = #{record.state,jdbcType=VARCHAR},
            </if>
            <if test="record.createTime != null">
                create_time = #{record.createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="record.truename != null">
                truename = #{record.truename,jdbcType=VARCHAR},
            </if>
            <if test="record.ldate != null">
                ldate = #{record.ldate,jdbcType=TIMESTAMP},
            </if>
            <if test="record.lman != null">
                lman = #{record.createTime,jdbcType=BIGINT},
            </if>
            <if test="record.cman != null">
                cman = #{record.cman,jdbcType=BIGINT},
            </if>
            <if test="record.portrait != null">
                portrait = #{record.portrait,jdbcType=VARCHAR},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>

    <update id="updateByExample" parameterType="map">
        update user
        set id = #{record.id,jdbcType=BIGINT},
        username =
        #{record.username,jdbcType=VARCHAR},
        pwd = #{record.pwd,jdbcType=CHAR},
        state = #{record.state,jdbcType=VARCHAR},
        create_time =
        #{record.createTime,jdbcType=TIMESTAMP}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>

    <update id="updateByPrimaryKeySelective" parameterType="User">
        update user
        <set>
            <if test="username != null">
                username = #{username,jdbcType=VARCHAR},
            </if>
            <if test="pwd != null">
                pwd = #{pwd,jdbcType=CHAR},
            </if>
            <if test="state != null">
                state = #{state,jdbcType=VARCHAR},
            </if>
            <if test="createTime != null">
                create_time = #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="truename != null">
                truename = #{truename,jdbcType=VARCHAR},
            </if>
            <if test="ldate != null">
                ldate = #{ldate,jdbcType=TIMESTAMP},
            </if>
            <if test="lman != null">
                lman = #{lman,jdbcType=BIGINT},
            </if>
            <if test="cman != null">
                cman = #{cman,jdbcType=BIGINT},
            </if>
            <if test="portrait != null">
                portrait = #{portrait,jdbcType=VARCHAR},
            </if>
        </set>
        where id = #{id,jdbcType=BIGINT}
    </update>

    <update id="updateByPrimaryKey" parameterType="User">
        update user
        set
        username = #{username,jdbcType=VARCHAR},
        pwd = #{pwd,jdbcType=CHAR},
        state = #{state,jdbcType=VARCHAR},
        create_time =
        #{createTime,jdbcType=TIMESTAMP}
        where id = #{id,jdbcType=BIGINT}
    </update>

    <!-- 用户登录验证查询 -->
    <select id="authentication" resultMap="BaseResultMap"
            parameterType="User">
        select
        <include refid="Base_Column_List"/>
        from user
        where username = #{record.username,jdbcType=VARCHAR} and pwd
        =
        #{record.pwd,jdbcType=CHAR}
    </select>

    <select id="selectOneEntry" resultMap="BaseResultMap"
            parameterType="map">
        select
        <include refid="Base_Column_List"/>
        from user
        <if test="example != null">
            <if test="example.oredCriteria != null">
                <include refid="Update_By_Example_Where_Clause"/>
            </if>
        </if>
        <if test="example != null">
            <if test="example.orderByClause != null">
                order by ${example.orderByClause}
            </if>
        </if>
    </select>

    <!-- 分页条件查询 -->
    <select id="selectByExampleAndPage" resultType="java.util.HashMap"
            parameterType="map">
        select a.*,b.id as rid,b.role_name
        from (user a left join user_role c
        on a.id=c.user_id) left join role b on
        c.role_id=b.id
        <if test="example != null">
            <if test="example.oredCriteria != null">
                <include refid="Update_By_Example_Where_Clause"/>
            </if>
        </if>
        <if test="example != null">
            <if test="example.orderByClause != null">
                order by ${example.orderByClause}
            </if>
        </if>
    </select>

    <select id="selectByTaskId" resultMap="BaseResultMap" parameterType="java.lang.Long">
    	SELECT
    	u.id, u.username, u.pwd, u.state, u.create_time, u.truename, u.ldate, u.lman, u.cman, u.portrait 
    	FROM user u 
    	LEFT JOIN crm_task_schedule t
    	ON u.id = t.last_edit_account
    	WHERE t.id = #{taskId}
    </select>

    <select id="selectAll" resultMap="BaseResultMap">
        SELECT
        <include refid="Base_Column_List"></include>
        FROM user u
        <where>
            u.state = '正常'
        </where>
    </select>

    <select id="getUserName" resultType="string" parameterType="int">
        SELECT truename FROM user
        <where>
            id = #{id}
        </where>
    </select>
</mapper>
<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.baicheng.fork.web.dao.PermissionMapper">

    <resultMap id="BaseResultMap" type="Permission">
        <id column="id" property="id" jdbcType="BIGINT"/>
        <result column="permission_name" property="permissionName" jdbcType="VARCHAR"/>
        <result column="permission_sign" property="permissionSign" jdbcType="VARCHAR"/>
        <result column="description" property="description" jdbcType="VARCHAR"/>
    </resultMap>

    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" suffix=")" prefixOverrides="and">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")"
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>

    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" suffix=")" prefixOverrides="and">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")"
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>

    <sql id="Base_Column_List">
        id, permission_name, permission_sign, description
    </sql>

    <select id="selectByExample" resultMap="BaseResultMap" parameterType="map">
        select
        <if test="example != null">
            <if test="example.distinct">
                distinct
            </if>
        </if>
        <include refid="Base_Column_List"/>
        from permission
        <if test="example != null">
            <if test="example.oredCriteria != null">
                <include refid="Update_By_Example_Where_Clause"/>
            </if>
        </if>
        <if test="example != null">
            <if test="example.orderByClause != null">
                order by ${example.orderByClause}
            </if>
        </if>
    </select>

    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long">
        select
        <include refid="Base_Column_List"/>
        from permission
        where id = #{id,jdbcType=BIGINT}
    </select>

    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
        delete from permission
        where id = #{id,jdbcType=BIGINT}
    </delete>

    <delete id="deleteByExample" parameterType="PermissionExample">
        delete from permission
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </delete>

    <insert id="insert" parameterType="Permission">
        insert into permission (id, permission_name, permission_sign, type,
        description)
        values (#{id,jdbcType=BIGINT}, #{permissionName,jdbcType=VARCHAR},
        #{permissionSign,jdbcType=VARCHAR}, #{type,jdbcType=BIGINT},
        #{description,jdbcType=VARCHAR})
    </insert>

    <insert id="insertSelective" parameterType="Permission">
        insert into permission
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="permissionName != null">
                permission_name,
            </if>
            <if test="permissionSign != null">
                permission_sign,
            </if>
            <if test="description != null">
                description,
            </if>
            <if test="description != null">
                type,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=BIGINT},
            </if>
            <if test="permissionName != null">
                #{permissionName,jdbcType=VARCHAR},
            </if>
            <if test="permissionSign != null">
                #{permissionSign,jdbcType=VARCHAR},
            </if>
            <if test="description != null">
                #{description,jdbcType=VARCHAR},
            </if>
            <if test="type != null">
                #{type,jdbcType=BIGINT},
            </if>
        </trim>
    </insert>

    <select id="countByExample" parameterType="PermissionExample" resultType="java.lang.Integer">
        select count(*) from permission
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>

    <update id="updateByExampleSelective" parameterType="map">
        update permission
        <set>
            <if test="record.id != null">
                id = #{record.id,jdbcType=BIGINT},
            </if>
            <if test="record.permissionName != null">
                permission_name = #{record.permissionName,jdbcType=VARCHAR},
            </if>
            <if test="record.permissionSign != null">
                permission_sign = #{record.permissionSign,jdbcType=VARCHAR},
            </if>
            <if test="record.description != null">
                description = #{record.description,jdbcType=VARCHAR},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>

    <update id="updateByExample" parameterType="map">
        update permission
        set id = #{record.id,jdbcType=BIGINT},
        permission_name = #{record.permissionName,jdbcType=VARCHAR},
        permission_sign = #{record.permissionSign,jdbcType=VARCHAR},
        description =
        #{record.description,jdbcType=VARCHAR}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>

    <update id="updateByPrimaryKeySelective" parameterType="Permission">
        update permission
        <set>
            <if test="permissionName != null">
                permission_name = #{permissionName,jdbcType=VARCHAR},
            </if>
            <if test="permissionSign != null">
                permission_sign = #{permissionSign,jdbcType=VARCHAR},
            </if>
            <if test="description != null">
                description = #{description,jdbcType=VARCHAR},
            </if>
        </set>
        where id = #{id,jdbcType=BIGINT}
    </update>

    <update id="updateByPrimaryKey" parameterType="Permission">
        update permission
        set permission_name = #{permissionName,jdbcType=VARCHAR},
        permission_sign = #{permissionSign,jdbcType=VARCHAR},
        description =
        #{description,jdbcType=VARCHAR}
        where id = #{id,jdbcType=BIGINT}
    </update>

    <!-- 通过角色id 查询角色 拥有的权限 -->
    <select id="selectPermissionsByRoleId" parameterType="java.lang.Long" resultMap="BaseResultMap">
        SELECT p.* FROM permission p LEFT JOIN role_permission rp ON rp.permission_id = p.id
        WHERE rp.role_id =
        #{id,jdbcType=BIGINT}
    </select>

    <select id="selectList" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from permission
        order by id
    </select>

    <select id="selectListByType" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from permission
        where type = #{type,jdbcType=BIGINT}
        order by id
    </select>
    <select id="selectPermissionByBuserId" parameterType="java.lang.Long" resultMap="BaseResultMap">
        select
        P.id, P.permission_name, P.permission_sign, P.description
        from permission P
        left JOIN role_permission RP ON(P.id=RP.permission_id)
        left JOIN t_buser_role BR ON(RP.role_id=BR.roleid)
        where
        BR.buserid= #{buserId,jdbcType=BIGINT}
        order by P.id
    </select>

    <select id="selectByUserId" parameterType="java.lang.Long" resultMap="BaseResultMap">
		SELECT 
		  p.id,
		  p.permission_name,
		  p.permission_sign,
		  p.description 
		FROM
		  `permission` p 
		  LEFT JOIN `role_permission` rp 
		    ON p.`id` = rp.`permission_id` 
		  LEFT JOIN `user_role` r 
		    ON rp.`role_id` = r.`role_id` 
		WHERE r.`user_id` = #{userId}  
    </select>

</mapper>
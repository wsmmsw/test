<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.baicheng.fork.web.dao.RoleMapper">

    <resultMap id="BaseResultMap" type="Role">
        <id column="id" jdbcType="BIGINT" property="id"/>
        <result column="role_name" jdbcType="VARCHAR" property="roleName"/>
        <result column="role_sign" jdbcType="VARCHAR" property="roleSign"/>
        <result column="description" jdbcType="VARCHAR" property="description"/>
        <result column="cdate" jdbcType="TIMESTAMP" property="cdate"/>
        <result column="cman" jdbcType="BIGINT" property="cman"/>
        <result column="ldate" jdbcType="TIMESTAMP" property="ldate"/>
        <result column="lman" jdbcType="BIGINT" property="lman"/>
    </resultMap>

    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and
                                    #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem"
                                             open="(" separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>

    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria"
                     separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and
                                    #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem"
                                             open="(" separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>

    <sql id="Base_Column_List">
        id, role_name, role_sign, description, cdate, cman, ldate, lman
    </sql>

    <select id="selectByExample" parameterType="RoleExample"
            resultMap="BaseResultMap">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        from role
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>

    <select id="selectByPrimaryKey" parameterType="java.lang.Long"
            resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from role
        where id = #{id,jdbcType=BIGINT}
    </select>

    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
        delete from role
        where id = #{id,jdbcType=BIGINT}
    </delete>

    <delete id="deleteByExample" parameterType="RoleExample">
        delete from role
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </delete>

    <insert id="insert" parameterType="Role">
        insert into role (
        id,
        role_name,
        role_sign,
        description,
        cdate,
        cman,
        ldate,
        lman)
        values (
        #{id,jdbcType=BIGINT},
        #{roleName,jdbcType=VARCHAR},
        #{roleSign,jdbcType=VARCHAR},
        #{description,jdbcType=VARCHAR},
        #{cdate,jdbcType=TIMESTAMP},
        #{cman,jdbcType=BIGINT},
        #{ldate,jdbcType=TIMESTAMP},
        #{lman,jdbcType=BIGINT})
    </insert>

    <insert id="insertSelective" parameterType="Role">
        <selectKey resultType="java.lang.Long" order="AFTER"
                   keyProperty="id">
            SELECT LAST_INSERT_ID() AS ID
        </selectKey>
        insert into role
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="roleName != null">
                role_name,
            </if>
            <if test="roleSign != null">
                role_sign,
            </if>
            <if test="description != null">
                description,
            </if>
            <if test="cdate != null">
                cdate,
            </if>
            <if test="cman != null">
                cman,
            </if>
            <if test="ldate != null">
                ldate,
            </if>
            <if test="lman != null">
                lman,
            </if>
            <if test="type != null">
                type,
            </if>
            <if test="bid != null">
                bid,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=BIGINT},
            </if>
            <if test="roleName != null">
                #{roleName,jdbcType=VARCHAR},
            </if>
            <if test="roleSign != null">
                #{roleSign,jdbcType=VARCHAR},
            </if>
            <if test="description != null">
                #{description,jdbcType=VARCHAR},
            </if>
            <if test="cdate != null">
                #{cdate,jdbcType=TIMESTAMP},
            </if>
            <if test="cman != null">
                #{cman,jdbcType=BIGINT},
            </if>
            <if test="ldate != null">
                #{ldate,jdbcType=TIMESTAMP},
            </if>
            <if test="lman != null">
                #{lman,jdbcType=BIGINT},
            </if>
            <if test="type != null">
                #{type,jdbcType=BIGINT},
            </if>
            <if test="bid != null">
                #{bid,jdbcType=BIGINT},
            </if>
        </trim>
    </insert>

    <select id="countByExample" parameterType="RoleExample"
            resultType="java.lang.Integer">
        select count(*) from role
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>

    <update id="updateByExampleSelective" parameterType="map">
        update role
        <set>
            <if test="record.id != null">
                id = #{record.id,jdbcType=BIGINT},
            </if>
            <if test="record.roleName != null">
                role_name = #{record.roleName,jdbcType=VARCHAR},
            </if>
            <if test="record.roleSign != null">
                role_sign = #{record.roleSign,jdbcType=VARCHAR},
            </if>
            <if test="record.description != null">
                description = #{record.description,jdbcType=VARCHAR},
            </if>
            <if test="record.cdate != null">
                cdate = #{record.cdate,jdbcType=TIMESTAMP},
            </if>
            <if test="record.cman != null">
                cman = #{record.cman,jdbcType=BIGINT},
            </if>
            <if test="record.ldate != null">
                ldate = #{record.ldate,jdbcType=TIMESTAMP},
            </if>
            <if test="record.lman != null">
                lman = #{record.lman,jdbcType=BIGINT},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>

    <update id="updateByExample" parameterType="map">
        update role
        set id = #{record.id,jdbcType=BIGINT},
        role_name = #{record.roleName,jdbcType=VARCHAR},
        role_sign = #{record.roleSign,jdbcType=VARCHAR},
        description = #{record.description,jdbcType=VARCHAR},
        cdate = #{record.cdate,jdbcType=TIMESTAMP},
        cman = #{record.cman,jdbcType=BIGINT},
        ldate = #{record.ldate,jdbcType=TIMESTAMP},
        lman = #{record.lman,jdbcType=BIGINT}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>

    <update id="updateByPrimaryKeySelective" parameterType="Role">
        update role
        <set>
            <if test="roleName != null">
                role_name = #{roleName,jdbcType=VARCHAR},
            </if>
            <if test="roleSign != null">
                role_sign = #{roleSign,jdbcType=VARCHAR},
            </if>
            <if test="description != null">
                description = #{description,jdbcType=VARCHAR},
            </if>
            <if test="cdate != null">
                cdate = #{cdate,jdbcType=TIMESTAMP},
            </if>
            <if test="cman != null">
                cman = #{cman,jdbcType=BIGINT},
            </if>
            <if test="ldate != null">
                ldate = #{ldate,jdbcType=TIMESTAMP},
            </if>
            <if test="lman != null">
                lman = #{lman,jdbcType=BIGINT},
            </if>
        </set>
        where id = #{id,jdbcType=BIGINT}
    </update>

    <update id="updateByPrimaryKey" parameterType="Role">
        update role
        set role_name = #{roleName,jdbcType=VARCHAR},
        role_sign = #{roleSign,jdbcType=VARCHAR},
        description = #{description,jdbcType=VARCHAR},
        cdate = #{cdate,jdbcType=TIMESTAMP},
        cman = #{cman,jdbcType=BIGINT},
        ldate = #{ldate,jdbcType=TIMESTAMP},
        lman = #{lman,jdbcType=BIGINT}
        where id = #{id,jdbcType=BIGINT}
    </update>

    <!-- 通过用户id 查询用户 拥有的角色 -->
    <select id="selectRolesByUserId" parameterType="java.lang.Long"
            resultMap="BaseResultMap">
        SELECT r.* FROM role r LEFT JOIN user_role ur ON r.id =
        ur.role_id
        WHERE ur.user_id = #{id,jdbcType=BIGINT}
    </select>

    <!-- 通过用户id 查询用户 拥有的角色 -->
    <select id="selectRolesByBUserId" parameterType="java.lang.Long"
            resultMap="BaseResultMap">
        SELECT r.* FROM role r LEFT JOIN t_buser_role ur ON r.id =
        ur.roleid
        WHERE ur.buserid = #{id,jdbcType=BIGINT}
    </select>

    <!-- 通过用户id 查询用户 拥有的角色 -->
    <select id="selectRolesByBUserIdAndType" parameterType="java.lang.Long"
            resultMap="BaseResultMap">
        SELECT r.* FROM role r LEFT JOIN t_buser_role ur ON r.id =
        ur.roleid
        WHERE ur.buserid = #{id,jdbcType=BIGINT}
    </select>

    <!-- 分页条件查询 -->
    <select id="selectByExampleAndPage" parameterType="map"
            resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from role
        <if test="example != null">
            <if test="example.oredCriteria != null">
                <include refid="Update_By_Example_Where_Clause"/>
            </if>
        </if>
        <if test="example != null">
            <if test="example.orderByClause != null">
                order by ${example.orderByClause}
            </if>
        </if>
    </select>

    <!-- 通过角色的名称或者是角色的标记查询 -->
    <select id="selectRolesByNameOrSign" parameterType="map"
            resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from role
        where role_name = #{record.roleName,jdbcType=VARCHAR} or
        role_sign =
        #{record.roleSign,jdbcType=VARCHAR}
    </select>

    <select id="selectRolesWithPermission" parameterType="map"
            resultType="java.util.HashMap">
        select a.id, a.role_name,a.role_sign,
        a.description,a.cdate,a.cman,a.ldate,a.lman,b.id as pid,
        b.permission_name as pname
        from (role a LEFT JOIN role_permission c ON
        a.id=c.role_id) left join
        permission b on c.permission_id=b.id
        <if test="example != null">
            <if test="example.oredCriteria != null">
                <include refid="Update_By_Example_Where_Clause"/>
            </if>
        </if>
        <if test="example != null">
            <if test="example.orderByClause != null">
                order by ${example.orderByClause}
            </if>
        </if>
    </select>

</mapper>